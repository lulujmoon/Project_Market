<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mm.market.product.ProductMapper">
		
		<select id="getList" resultMap="selectResult" parameterType="ProductPager">
		 SELECT P.*, C.*, L.*, PF.*
		 FROM product P
		 INNER JOIN category C
		 ON P.categoryCode = C.categoryCode
		 INNER JOIN location L
		 ON P.locationCode = L.locationCode
		 LEFT JOIN productfile PF
		 ON P.productNum = PF.productNum
		 WHERE 
			 <if test="categoryCode != 0L">
			 	P.categoryCode = #{categoryCode} AND 
			 </if>
			 <if test="locationCode != 0L">
			 	P.locationCode = #{locationCode} AND
			 </if>
			 <if test="username != null">
			 	username = #{username} AND
			 </if>
		 P.productName LIKE CONCAT ('%', #{keyword}, '%') AND
		 PF.fileNum = (SELECT MIN(PF.fileNum) FROM productFile PF WHERE productNum = P.productNum)
		 ORDER BY
			 <choose>
			 	<when test="order == 'lowPrice'">
			 		P.productPrice asc
			 	</when>
			 	<when test="order == 'highPrice'">
			 		P.productPrice desc
			 	</when>
			 	<otherwise>
			 		P.productDate DESC
			 	</otherwise>
			 </choose>
		 limit #{startRow}, #{perPage}
		</select>
		
		<select id="getTotalCount" resultType="Long" parameterType="ProductPager">
			SELECT count(productNum)
			FROM product
			WHERE 
				<if test="categoryCode != 0L">
					categoryCode = #{categoryCode} AND 
				</if>
				<if test="locationCode != 0L">
					locationCode = #{locationCode} AND
				</if>
				<if test="username != null">
					username = #{username} AND
				</if>
			productName LIKE CONCAT ('%', #{keyword}, '%')		   
			AND productNum > 0
		</select>
		
		<select id="getSelect" parameterType="ProductVO" resultMap="selectResult">
			SELECT C.*, P.*, PF.*, L.*
			FROM product P LEFT JOIN productFile PF
			ON P.productNum = PF.productNum
			INNER JOIN category C
			ON C.categoryCode = P.categoryCode
			INNER JOIN location L
			ON P.locationCode = L.locationCode
			WHERE P.productNum=#{productNum}
		</select>
		
		<resultMap type="ProductVO" id="selectResult">
			<id property="productNum" column="productNum"></id>
			<result property="productName" column="productName"/>
			<result property="username" column="username"/>
			<result property="categoryCode" column="categoryCode"/>
			<result property="productDate" column="productDate"/>
			<result property="productHit" column="productHit"/>
			<result property="productHeart" column="productHeart"/>
			<result property="productContent" column="productContent"/>
			<result property="productStatus" column="productStatus"/>
			<result property="productPrice" column="productPrice"/>
			<result property="productNego" column="productNego"/>
			<result property="locationCode" column="locationCode"/>
			<association property="category" javaType="CategoryVO">
				<id property="categoryCode" column="categoryCode"/>
				<result property="categoryName" column="categoryName"/>
			</association>
			<association property="location" javaType="LocationVO">
				<id property="locationCode" column="locationCode"/>
				<result property="locationName" column="locationName"/>
			</association>
			<collection property="files" javaType="java.util.List" ofType="ProductFileVO">
				<id property="fileNum" column="fileNum"/>
				<result property="productNum" column="productNum"/>
				<result property="fileName" column="fileName"/>
				<result property="originName" column="originName"/>
			</collection>
			<collection property="heart" javaType="HeartVO">
				<id property="heartNum" column="heartNum"/>
				<result property="username" column="username"/>
				<result property="productNum" column="productNum"/>
			</collection>
		</resultMap> 
		
		<select id="getProductNum" resultType="Long">
			SELECT LAST_INSERT_ID()
		</select>
		
		<update id="setHitUpdate" parameterType="ProductVO">
			UPDATE product SET productHit=productHit+1 WHERE productNum=#{productNum}
		</update>

		<delete id="setDelete" parameterType="ProductVO">
			DELETE FROM product WHERE productNum=#{productNum}
		</delete>

		<insert id="setInsert" parameterType="ProductVO" useGeneratedKeys="true" keyProperty="productNum">
			insert into product 
			(productNum, productName, username, categoryCode, productDate, productHit, productHeart, productContent, productPrice, productNego, locationCode)
			 values (#{productNum}, #{productName}, #{username}, #{categoryCode}, NOW(), 0, 0, #{productContent}, #{productPrice}, #{productNego}, #{locationCode})
		</insert>
		
		<insert id="setFileInsert" parameterType="ProductFileVO">
			insert into productFile (productNum, fileName, originName)
			values (#{productNum}, #{fileName}, #{originName})
		</insert>

		<delete id="setFileDelete" parameterType="ProductFileVO">
			delete from productFile where fileNum=#{fileNum}
		</delete>
		
		<select id="getFileSelect" parameterType="ProductFileVO" resultType="ProductFileVO">
			select * from productFile where fileNum=#{fileNum}
		</select>
		
		<update id="setUpdate" parameterType="ProductVO">
			update product set
			productName=#{productName}, 
			categoryCode=#{categoryCode}, 
			productContent=#{productContent}, 
			productPrice=#{productPrice},
			productNego=#{productNego},
			locationCode=#{locationCode}
			where productNum=#{productNum}
		</update>
		
		
		<update id="setRewrite" parameterType="ProductVO">
			update product set
			productName=#{productName}, 
			categoryCode=#{categoryCode}, 
			productContent=#{productContent}, 
			productDate=NOW(),
			productPrice=#{productPrice},
			productNego=#{productNego},
			locationCode=#{locationCode}
			where productNum=#{productNum}
		</update>
		
		<update id="setStatus" parameterType="ProductVO">
			UPDATE product SET productStatus=#{productStatus} WHERE productNum=#{productNum}
		</update>
		
		
		<!-- heart -->
		<insert id="setHeart" parameterType="HeartVO">
			insert into heart (username, productNum) values (#{username}, #{productNum}) 
		</insert>
		
		<delete id="deleteHeart" parameterType="HeartVO">
			delete from heart where username=#{username} and productNum=#{productNum}
		</delete>
		
		<select id="updateHeart" parameterType="HeartVO">
			update product set productHeart = (select count(*) from heart where productNum=#{productNum})where productNum=#{productNum}
		</select>
		
		<select id="getHeart" resultType="Long">
			SELECT COUNT(heartNum) FROM heart WHERE username=#{username} and productNum=#{productNum}
		</select>
		
		<select id="getHeartList" parameterType="ProductPager" resultMap="selectResult">
			SELECT H.*, P.*, PF.*, L.*
			FROM heart H left Join product P
			ON H.productNum = P.productNum
			LEFT JOIN productFile PF
			ON p.productNum = pf.productNum
		 	INNER JOIN location L
		 	ON P.locationCode = L.locationCode
			WHERE H.username = #{username}
		</select>
		
</mapper>   

